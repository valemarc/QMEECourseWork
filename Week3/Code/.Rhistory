install.packages("ggplot2")
library("ggplot2")
M <- matrix(runif(1000000),1000,1000)
SumAllElements <- function(M){
Dimensions <- dim(M)
Tot <- 0
for (i in 1:Dimensions[1]){
for (j in 1:Dimensions[2]){
Tot <- Tot + M[i,j]
}
}
return (Tot)
}
## This on my computer takes about 1 sec
print(system.time(SumAllElements(M)))
## While this takes about 0.01 sec
print(system.time(sum(M)))
a <- 1
for (i in 1:10 ) {
a[i] = 10
}
?apply
## Build a random matrix
M <- matrix(rnorm(100), 10, 10)
head(M)
## Take the mean of each row
RowMeans <- apply(M, 1, mean)
print (RowMeans)
## Now the variance
RowVars <- apply(M, 1, var)
print (RowVars)
## By column
ColMeans <- apply(M, 2, mean)
print (ColMeans)
SomeOperation <- function(v){ # (What does this function do?)
if (sum(v) > 0){
return (v * 100)
}
return (v)
}
M <- matrix(rnorm(100), 10, 10)
print (apply(M, 1, SomeOperation))
attach(iris)
head(iris)
replicate(10, runif(5))
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
Ricker <- function(N0=1, r=1, K=10, generations=50)
{
# Runs a simulation of the Ricker model
# Returns a vector of length generations
N <- rep(NA, generations)    # Creates a vector of NA
N[1] <- N0
for (t in 2:generations)
{
N[t] <- N[t-1] * exp(r*(1.0-(N[t-1]/K)))
}
return (N)
}
Ricker <- function(N0=1, r=1, K=10, generations=50)
{
# Runs a simulation of the Ricker model
# Returns a vector of length generations
N <- rep(NA, generations)    # Creates a vector of NA
N[1] <- N0
for (t in 2:generations)
{
N[t] <- N[t-1] * exp(r*(1.0-(N[t-1]/K)))
}
return (N)
}
plot(Ricker(generations=10), type="l")
a <- NA
for (i in 1:10 ) {
a = c(a,i)
}
print(a)
a <- rep(NA,10)
for (i in 1:10 ) {
a[i] = 10
}
print(a)
KeyWestTemp<- as.matrix(KeyWestTemp)
#Load data
KeyWestTemp <- load("../data/KeyWestAnnualMeanTemperature.RData")
setwd("~/Documenti/QMEECourseWork/Week3/Code")
#Load data
KeyWestTemp <- load("../data/KeyWestAnnualMeanTemperature.RData")
KeyWestTemp<- as.matrix(KeyWestTemp)
head(KeyWestTemp)
view(KeyWestTemp)
#Transpose
KeyWestTemp <-t(KeyWestTemp)
View(ats)
MyData <- as.matrix(load("../data/KeyWestAnnualMeanTemperature.RData"))
head(MyData)
data(Orange)
head(Orange)
count<-Orange$Tree
age<-Orange$age
circumference<-Orange$circumference
View(Orange)
save(count, age, circumference, file = "mydata.rda")
rm(age, circumference, count)
load("mydata.rda")
#Load data
KeyWestTemp <- load("../data/KeyWestAnnualMeanTemperature.RData")
head(ats)
ats <-t(ats)
head(ats)
View(ats)
class(ats)
cor(ats)
head(ats)
cor(ats[2,2], ats[2,1])
colnames(ats)
TempData <- as.data.frame(ats[-1,],stringsAsFactors = F)
TempData
head(TempData)
colnames(TempData) <- MyData[1,]
colnames(TempData) <- ats[1,] # assign column names from original data
ats <-t(ats)
class(ats)
colnames(ats)
TempData <- as.data.frame(ats[-1,],stringsAsFactors = F)
TempData <-t(TempData)
head(TempData)
colnames(TempData) <- ats[1,] # assign column names from original data
set.seed(123)
df <- as.data.frame(replicate(5, runif(100), s=F))
names(df) <- letters[1:ncol(df)]
head(df)
cor(df$a, df$b)
cor(df$a[1,], df$b[1,])
ats
plot(ats$Year,ats$Temp)
ats>-as.data.frame(ats,stringsAsFactors = F)
plot(ats$Year,ats$Temp)
View(df)
#Load data
KeyWestTemp <- load("../data/KeyWestAnnualMeanTemperature.RData")
head(ats)
plot(ats$Year,ats$Temp)
#Transpose
ats <-t(ats)
class(ats)
head(ats)
#Load data
GPDD_data <- load("../data/GPDDFiltered.RData")
install.packages(maps)
install.packages("maps")
library(maps)
View(gpdd)
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
head(gpdd)
points(gpdd.lat,gpdd.long, col="red", pch=16)
points(gpdd$lat,gpdd$long, col="red", pch=16)
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(gpdd$long,gpdd$lat, col="red", pch=16)
